# Renner model configuration file
# Use regex surrounded by slashes for all values unless otherwise specified
# Author: Amir Zeldes

[main]
### General function label settings ###
subject_func=/nsubj/
apposition_func=/appos/
# Function for the second conjunct, NOT the conjunction; used to propagate function from first conjunct
conjunct_func=/conj/
# Dependency function identifying a coordinating conjunction
coord_func=/cc/

### Markable Detection ###
# POS categories to consider for markable heads
mark_head_pos=/(NN?P?S?|PR?P.?)$/
# POS categories to consider for markable head only if dependency function is not (!) ...
# This is NOT a regular expression
pos_func_heads=CD!num;CD!number;CD!dep;CD!discourse;DT+nsubj;DT+dobj;DT+pobj
# Dependency functions that rule out being a markable head
mark_forbidden_func=/amod/
# Dependency functions that terminate markable sequence propagation
non_link_func=/nsubj|cop|aux|dep|punct|appos|mark|advcl|tmod|discourse|advmod|parataxis|neg/
# Token values that terminate markable sequence propagation
non_link_tok=/[Ww]hen|[Ii]f/
# Dependency functions for which stoplist is checked to rule out spurious markables and markable extensions are forbidden
stop_func=/amod|nn|xcomp|mwe|dep/
# Postprocess parser input to ensure tokens inside known entities depend on the entity head?
postprocess_parser=True
# Func substitutions - replace function depending on POS and direction of head
func_substitute_backward=NN/dep/appos/;NNS/dep/appos;NNP/dep/appos;NNPS/dep/appos;NP/dep/appos;NPS/dep/appos;CD/dep/appos
func_substitute_forward=NN/dep/nn/;NNS/dep/nn;NNP/dep/nn;NNPS/dep/nn;NP/dep/nn;NPS/dep/nn;CD/dep/num

### Entity Detection ###
# Default entity
default_entity=abstract
# Parts of speech for proper nouns
proper_pos=/NN?PS?/
# Parts of speech for pronouns
pronoun_pos=/PR?P\$?/
# What can an article look like which is not part of a person's actual name?
articles=/^([Aa]n?|[Tt]he)$/
# Are people and place names in this language capitalized?
cap_names=True
# Ad hoc lemmatization rules - cascade of POS dependent string replace rules to use if no lemma is available in input
lemma_rules=NNP?S/xes$/x/;NNP?S/sses$/ss/;NNP?S/ies$/y/;NNP?S/s$//;NPS/xes$/x/;NPS/sses$/ss/;NPS/ies$/y/;NPS/s$//
# Edit morphology information - cascade of string replace rules to use on the morph field in conll data if available
morph_rules=_/_
# Auto lower case bahvior for lemmas when using lemma rules. Possible values: all, except_all_caps, none
auto_lower_lemma=except_all_caps
# Entity to guess for unknown acronyms
all_caps_entity=organization
# Maximum of substring suffix used on unknown heads to establish category (e.g. 4 catches -ness as usually abstract)
max_suffix_length=8

# Default name and agreement for persons and places
person_def_entity=person
place_def_entity=place
time_def_entity=time
object_def_entity=object
organization_def_entity=organization
quantity_def_entity=quantity
person_def_agree=male
place_def_agree=inanim
time_def_agree=inanim
organization_def_agree=inanim
object_def_agree=inanim
quantity_def_agree=plural

### Coreference Detection ###
# Modifier functions that require strictly identical heads for coreference
ident_mod_func=/^(num|poss)$/
# What POS categories should allow lemma matching of heads for coreference?
lemma_match_pos=/^NNS?$/
# Dependency functions that are interpreted as modifiers for compatible modifier checks
mod_func=/amod|nn|quantmod|num/
# Tokens that mark opening and closing quotation for direct speech detection
open_quote=/^(["'”’]|``)$/
close_quote=/^(["'”’]|'')$/
# Tokens used to identify a question sentence
question_mark=/^\?$/

### Agreement Class Detection ###
pos_agree_mapping=NPS>plural;NNPS>plural;NNS>plural
default_agree=inanim
# Agreement classes compatible with unknown agreement - all other classes will require strict agreement
agree_with_unknown=/inanim|male|female/
# Agreement classes incompatible with person type entities
no_person_agree=/inanim/

### Postprocessing ###
remove_head_func=/nn/
remove_child_func=/cop/
remove_singletons=True